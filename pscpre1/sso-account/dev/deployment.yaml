apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2019-11-01T23:30:01Z"
  labels:
    app: sso-account
    author: Daniel Bunn
    branch: release/4.37.0
    commit: b7fc7369a74d81804fb7aecaaaacd1a03e503404
    env: dev
    maestro: "true"
    team: sso
    url: https://drone.admin.sharecare.com/Sharecare/SSO-Account/425
  name: sso-account
  namespace: dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sso-account
      env: dev
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        iam.amazonaws.com/role: app-dev-sso-account
        prometheus.io/path: /metrics
        prometheus.io/port: "9002"
        prometheus.io/scrape: "true"
      creationTimestamp: null
      labels:
        app: sso-account
        author: Daniel Bunn
        branch: release/4.37.0
        commit: b7fc7369a74d81804fb7aecaaaacd1a03e503404
        env: dev
        maestro: "true"
        team: sso
        url: https://drone.admin.sharecare.com/Sharecare/SSO-Account/425
    spec:
      affinity:
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: sso-account
                  env: dev
              topologyKey: failure-domain.beta.kubernetes.io/zone
            weight: 100
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: sso-account
                  env: dev
              topologyKey: kubernetes.io/hostname
            weight: 10
      containers:
      - env:
        - name: SSO_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              key: SSO_CLIENT_SECRET
              name: SSO_CLIENT_SECRET
        - name: APP_CRYPTO_SECRET
          valueFrom:
            secretKeyRef:
              key: APP_CRYPTO_SECRET
              name: APP_CRYPTO_SECRET
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              key: AWS_SECRET_ACCESS_KEY
              name: AWS_SECRET_ACCESS_KEY
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              key: AWS_ACCESS_KEY_ID
              name: AWS_ACCESS_KEY_ID
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CREATION_TIMESTAMP
          value: "1572651001669125000"
        - name: INSTANCE
          value: dev.sharecare.com.au
        - name: REGION
          value: us-east-1
        - name: MAESTRO_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: MAESTRO_CREATION_TIMESTAMP
          value: "1572651001669125000"
        - name: MAESTRO_INSTANCE
          value: dev.sharecare.com.au
        - name: MAESTRO_HOSTS
          value: dev.sharecare.com.au
        - name: MAESTRO_REGION
          value: us-east-1
        - name: MAESTRO_ALL_REGIONS
          value: us-east-1
        image: nexus.admin.sharecare.com/sso-account:4.37.0-425
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 4
          httpGet:
            path: /healthcheck?livenessProbe
            port: 9002
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 5
        name: sso-account
        ports:
        - containerPort: 9002
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 4
          httpGet:
            path: /healthcheck?readinessProbe
            port: 9002
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 10
        resources:
          limits:
            memory: 1024m
          requests:
            cpu: 500m
            memory: 512m
        volumeMounts:
        - mountPath: /app/secrets
          name: app-secrets
          readOnly: true
      imagePullSecrets:
      - name: nexus
status: {}
